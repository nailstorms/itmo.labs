package lab7;

import java.util.ListResourceBundle;

public class ClientResourceBundle_ru extends ListResourceBundle {

    public static final Object[][] contents = {
            {"title", "Клиент"},
            {"acquireData", "Получить данные с сервера"},
            {"helpBtn", "Помощь"},
            {"startBtn", "Старт"},
            {"stopBtn", "Стоп"},
            {"clickedObject", "Кликнутый объект - "},
            {"connectionInfo", "Состояние обмена с сервером"},
            {"filtAnimInfo", "Правильность анимаций/фильтров"},
            {"filtLabel", "Фильтры"},
            {"dataAcquired", "Данные получены"},
            {"unableToPaint", "Невозможно нарисовать "},
            {"animStart", "Запуск анимации..."},
            {"animStop", "Эллипсы возвращаются в исходное положение"},
            {"formatError", "Ошибка в формате"},
            {"dateFormatError", "Ошибка в формате даты"},
            {"idError", "В ID значение \"От\" больше чем значение \"До\""},
            {"heightError", "В height значение \"От\" больше чем значение \"До\""},
            {"weightError", "В weight значение \"От\" больше чем значение \"До\""},
            {"dateError", "В dateOfBirth значение \"От\" больше чем значение \"До\""},
            {"xError", "В x значение \"От\" больше чем значение \"До\""},
            {"yError", "В y значение \"От\" больше чем значение \"До\""},
            {"serverUnav", "Сервер временно недоступен."},
            {"emptyColl", "Коллекция пуста."},
            {"ioError", "Ошибка I/O."},

            {"introLabel", "Немного полезной информации о просмотрщике коллекции:"},
            {"labelRetrieve", "Чтобы получить коллекцию NPC, нажмите кнопку \"Получить данные с сервера\"."},
            {"labelElements", "NPC представлены как эллипсы в системе координат XOY."},
            {"labelElements1", "Чтобы узнать больше информации об объекте, кликните на него. Информацию можно увидеть в верхней части экрана."},
            {"labelElements2", "Наведите мышку на объект, чтобы узнать его имя."},
            {"labelFields", "Поля: id - уникальный идентификатор NPC; name - имя NPC;"},
            {"labelFields1", "height - рост NPC; weight - вес NPC; dateOfBirth - дата рождения NPC;"},
            {"labelFields2", "x,y - координаты NPC на карте, color - цвет NPC;"},
            {"labelFields3", "beautyLevel - уровень красоты NPC; chinSharpness - острота подбородка NPC."},
            {"labelFilters", "Чтобы отфильтровать объекты, задайте желаемые характеристики."},
            {"labelFilters1", "Все поля кроме даты рождения и имени имеют числовые значения. Дата рождения имеет формат \"yyyy-MM-dd\", имя - строка."},
            {"labelFilters2", "Если вы оставите поле \"От\" незаполненным, будут рассматриваться все элементы ниже значения в \"До\"."},
            {"labelFilters3", "Если вы оставите поле \"До\" незаполненным, будут рассматриваться все элементы выше значения в \"От\"."},
            {"labelFilters4", "Если вы оставите оба поля незаполненными, данная характеристика не будет учитываться при фильтрации."},
            {"labelStart", "Кнопка \"Старт\" запускает анимацию. Элементы, соответствующие фильтрам, начинают медленно исчезать в течение 5 секунд, затем в течение 4 секунд они возвращаются в прежнее состояние."},
            {"labelStop", "Кнопка \"Стоп\" отключает анимацию."}
    };

    @Override
    public Object[][] getContents() {
        return contents;
    }

}
